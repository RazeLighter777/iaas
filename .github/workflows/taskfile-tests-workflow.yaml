# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "staging" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: staging
    - uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main
      with:
        version: 'latest'
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13' 
    - uses: actions/setup-go@v5
      with:
        go-version: '^1.13.1' # The Go version to download (if necessary) and use.
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0
    - run: pip3 install flux-local
    - run: go install github.com/yannh/kubeconform/cmd/kubeconform@latest
    - run: task test-terraform
    - run: task test-flux-local
    - run: task test-kubeconform
    - name: Merge staging -> main
      if: ${{ success() }}
      uses: devmasx/merge-branch@master
      with:
        type: now
        from_branch: staging
        target_branch: main
        message: "Pipeline Passed: Merge staging -> main"
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create status check
      uses: mapbox/create-status-check@v1
      if: ${{ success() }}
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        context: 'Test run'
        description: 'Passed'
        state: 'success'
        sha: ${{github.event.pull_request.head.sha || github.sha}}

