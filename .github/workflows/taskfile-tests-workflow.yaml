# This workflow will test Kubernetes and Terraform configurations
# Jobs run only when relevant files have changed

name: Infrastructure Tests

on:
  push:
    branches: [ "staging" ]
  pull_request:
    branches: [ "main", "renovate/**" ]

permissions:
  statuses: write
  checks: write
  contents: write

jobs:

  k8s-tests:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    steps:
    - name: Check for cluster changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          cluster:
            - 'cluster/**'
    - name: Checkout repository
      if: steps.changes.outputs.cluster == 'true'
      uses: actions/checkout@v4
      with:
        ref: staging
    - name: Setup Task runner
      if: steps.changes.outputs.cluster == 'true'
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Flux CLI
      if: steps.changes.outputs.cluster == 'true'
      uses: fluxcd/flux2/action@main
      with:
        version: 'latest'
    - name: Setup Python environment
      if: steps.changes.outputs.cluster == 'true'
      uses: actions/setup-python@v5
      with:
        python-version: '3.13' 
    - name: Setup Go environment
      if: steps.changes.outputs.cluster == 'true'
      uses: actions/setup-go@v5
      with:
        go-version: '^1.13.1'
        cache: false
    - name: Install flux-local
      if: steps.changes.outputs.cluster == 'true'
      run: pip3 install flux-local
    - name: Install kubeconform
      if: steps.changes.outputs.cluster == 'true'
      run: go install github.com/yannh/kubeconform/cmd/kubeconform@latest
    - name: Run Flux local tests
      if: steps.changes.outputs.cluster == 'true'
      run: task test-flux-local
    - name: Run Kubeconform tests
      if: steps.changes.outputs.cluster == 'true'
      run: task test-kubeconform

  terraform-authentik-tests:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    steps:
    - name: Check for terraform authentik changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          authentik:
            - 'terraform/authentik/**'
    - name: Checkout repository
      if: steps.changes.outputs.authentik == 'true'
      uses: actions/checkout@v4
      with:
        ref: staging
    - name: Setup Task runner
      if: steps.changes.outputs.authentik == 'true'
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Terraform
      if: steps.changes.outputs.authentik == 'true'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.11.2
    - name: Test Terraform Authentik
      if: steps.changes.outputs.authentik == 'true'
      run: |
        cd terraform
        terraform -chdir=authentik init -upgrade
        terraform -chdir=authentik validate

  terraform-servarr-tests:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    steps:
    - name: Check for terraform servarr changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          servarr:
            - 'terraform/servarr/**'
    - name: Checkout repository
      if: steps.changes.outputs.servarr == 'true'
      uses: actions/checkout@v4
      with:
        ref: staging
    - name: Setup Terraform
      if: steps.changes.outputs.servarr == 'true'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.11.2
    - name: Test Terraform Servarr
      if: steps.changes.outputs.servarr == 'true'
      run: |
        cd terraform
        terraform -chdir=servarr init -upgrade
        terraform -chdir=servarr validate

  terraform-vault-tests:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    steps:
    - name: Check for terraform vault changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          vault:
            - 'terraform/vault/**'
    - name: Checkout repository
      if: steps.changes.outputs.vault == 'true'
      uses: actions/checkout@v4
      with:
        ref: staging
    - name: Setup Terraform
      if: steps.changes.outputs.vault == 'true'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.11.2
    - name: Test Terraform Vault
      if: steps.changes.outputs.vault == 'true'
      run: |
        cd terraform
        terraform -chdir=vault init -upgrade
        terraform -chdir=vault validate

  status-check:
    runs-on: ubuntu-latest
    needs: [k8s-tests, terraform-authentik-tests, terraform-servarr-tests, terraform-vault-tests]
    if: always()
    steps:
    - name: Set success status
      if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
      uses: guibranco/github-status-action-v2@v1.1.13
      with: 
        authToken: ${{secrets.GITHUB_TOKEN}}
        context: 'Infrastructure Tests'
        description: 'All tests passed'
        state: 'success'
        sha: ${{github.event.pull_request.head.sha || github.sha}}
    - name: Set failure status
      if: ${{ contains(needs.*.result, 'failure') }}
      uses: guibranco/github-status-action-v2@v1.1.13
      with: 
        authToken: ${{secrets.GITHUB_TOKEN}}
        context: 'Infrastructure Tests'
        description: 'Some tests failed'
        state: 'failure'
        sha: ${{github.event.pull_request.head.sha || github.sha}}

  merge-to-main:
    runs-on: ubuntu-latest
    needs: [k8s-tests, terraform-authentik-tests, terraform-servarr-tests, terraform-vault-tests]
    if: github.event_name != 'pull_request' && success()
    steps:
    - name: Merge staging -> main
      uses: devmasx/merge-branch@master
      with:
        type: now
        from_branch: staging
        target_branch: main
        message: "Pipeline Passed: Merge staging -> main"
        github_token: ${{ secrets.GITHUB_TOKEN }}
