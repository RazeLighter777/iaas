# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 70.0.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-charts
        namespace: flux-system
      interval: 5m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  valuesFrom:
    - kind: Secret
      name: grafana-oauth-secrets
      valuesKey: client_id
      targetPath: grafana.grafana\.ini.auth\.generic_oauth.client_id
    - kind: Secret
      name: grafana-oauth-secrets
      valuesKey: client_secret
      targetPath: grafana.grafana\.ini.auth\.generic_oauth.client_secret
  values:
    prometheus-node-exporter:
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
    prometheusOperator:
      createCustomResource: true
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: false
    alertmanager:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-proxy-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://alertmanager.${domain_name}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - alertmanager.${domain_name}
      image:
        registry: quay.io
        repository: prometheus/alertmanager
        tag: v0.28.1@sha256:27c475db5fb156cab31d5c18a4251ac7ed567746a2483ff264516437a39b15ba
      config:
        global:
          resolve_timeout: 5m
        inhibit_rules:
          - equal:
              - namespace
              - alertname
            source_match:
              severity: critical
            target_match_re:
              severity: warning|info
          - equal:
              - namespace
              - alertname
            source_match:
              severity: warning
            target_match_re:
              severity: info
        receivers:
          - name: "null"
          - name: discord
            discord_configs:
              - webhook_url: ${discord_webhook_url}
                title: |-
                  [{{ .Status | toUpper }}:{{ if eq .Status "firing" }}{{ .Alerts.Firing | len }}{{ else }}{{ .Alerts.Resolved | len }}{{ end }}]
                message: |-
                  {{- range .Alerts }}
                    **{{ .Labels.alertname }} {{ if ne .Labels.severity "" }}({{ .Labels.severity | title }}){{ end }} **
                    {{- if ne .Annotations.description "" }}
                      **Description:** {{ .Annotations.description }}
                    {{- else if ne .Annotations.summary "" }}
                      **Summary:** {{ .Annotations.summary }}
                    {{- else if ne .Annotations.message "" }}
                      **Message:** {{ .Annotations.message }}
                    {{- else }}
                      **Description:** N/A
                    {{- end }}
                  {{- end }}
        route:
          group_by:
            - alertname
          group_interval: 5m
          group_wait: 30s
          receiver: discord
          repeat_interval: 12h
          routes:
          # cloudnative-pg ha check
            - match:
                alertname: CNPGClusterHAWarning 
              receiver: "null"
            - match:
                alertname: Watchdog
              receiver: "null"
            - match:
                severity: critical
              receiver: discord
            - match:
                alertname: InfoInhibitor
              receiver: "null"
            
    grafana:
      assertNoLeakedSecrets: false # Grafana can't tell we're putting secrets in the valuesFrom field :(
      enabled: true
      image:
        repository: grafana/grafana
        tag: 11.5.2@sha256:8b37a2f028f164ce7b9889e1765b9d6ee23fec80f871d156fbf436d6198d32b7
      defaultDashboardsEnabled: true
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        hosts:
          - grafana.${domain_name}
      grafana.ini:
        auth:
          signout_redirect_url: "https://authentik.${domain_name}/application/o/grafana/end-session/"
          oauth_auto_login: true
        auth.generic_oauth:
          name: authentik
          enabled: true
          scopes: "openid profile email"
          auth_url: "https://authentik.${domain_name}/application/o/authorize/"
          token_url: "https://authentik.${domain_name}/application/o/token/"
          api_url: "https://authentik.${domain_name}/application/o/userinfo/"
          # Optionally map user groups to Grafana roles
          role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
        server:
          root_url: https://grafana.${domain_name}
          dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
      plugins:
        - grafana-piechart-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          cert-manager:
            gnetId: 11001
            revision: 1
            datasource: Prometheus
          authentik:
            gnetId: 14837
            revision: 2
            datasource: Prometheus
          cloudnative-pg:
            gnetId: 20417
            revision: 3
            datasource: Prometheus
          radarr:
            gnetId: 12896
            revision: 1
            datasource: Prometheus
          sonarr:
            gnetId: 12530
            revision: 2
            datasource: Prometheus
          qbittorrent:
            gnetId: 15116
            revision: 1
            datasource: Prometheus
      sidecar:
        dashboards:
          enabled: true
          searchNamespace: ALL
        datasources:
          enabled: true
          searchNamespace: ALL
      serviceMonitor:
        enabled: true
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-proxy-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://prometheus.${domain_name}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - prometheus.${domain_name}
      image:
        registry: quay.io
        repository: prometheus/prometheus
        tag: v3.2.0@sha256:5888c188cf09e3f7eebc97369c3b2ce713e844cdbd88ccf36f5047c958aea120
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 7d
        storageSpec:
          volumeClaimTemplate:
            metadata:
              name: prometheus
            spec:
              storageClassName: truenas-iscsi
              resources:
                requests:
                  storage: 25Gi
