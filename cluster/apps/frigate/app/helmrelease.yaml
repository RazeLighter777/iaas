---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
  namespace: frigate
spec:
  suspend: false
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      neolink:
        enabled: true
        containers:
          main:
            image:
              repository: quantumentangledandy/neolink
              tag: latest@sha256:4eebf499c20f8de740d8c32163f665e41fd0f342be3b1174828b3b8bd7def59d
            resources:
              requests:
                memory: 1000Mi
                cpu: 1000m
              limits:
                memory: 4000Mi
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 0
              fsGroupChangePolicy: OnRootMismatch
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
              startup:
                enabled: false
      main:
        annotations:
          configmap.reloader.stakater.com/reload: frigate-configmap
        pod:
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.15.1
            env:
              TZ: ${timezone}
            securityContext:
              privileged: true
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                memory: 1000Mi
                cpu: 1000m
              limits:
                memory: 4000Mi

    service:
      neolink:
        controller: neolink
        ports:
          rtsp:
            port: 8554
            primary: true
      main:
        controller: main
        ports:
          http:
            port: &port 5000
            primary: true
          go2rtc:
            enabled: true
            port: 1984
          rtsp:
            enabled: true
            port: 8554

    ingress:
      main:
        className: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-proxy-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://frigate.${domain_name}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "frigate.${domain_name}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: *port

    persistence:
      config:
        enabled: true
        storageClass: longhorn-fast
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /config
      config-file:
        enabled: true
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
          - path: /etc/neolink.toml
            subPath: neolink.toml
            readOnly: true
      media:
        enabled: true
        storageClass: longhorn-fast
        accessMode: ReadWriteOnce
        size: 50Gi
        globalMounts:
          - path: /media
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        globalMounts:
          - path: /dev/bus/usb