---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbittorrent
spec:
  interval: 30m
  updateStrategy:
    type: RollingUpdate
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      qbittorrent:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 65542 # gladius:external-services
        initContainers:
          coredns:
            image:
              repository: mirror.gcr.io/coredns/coredns
              tag: 1.12.1
            args:
              - -conf
              - /etc/coredns/Corefile
            restartPolicy: Always
          config-init:
            image:
              repository: busybox
              tag: 1.37.0
            command:
              - /bin/sh
              - -c
              - "mkdir -p /config/qBittorrent && cp /template/qBittorrent.conf /config/qBittorrent/qBittorrent.conf"
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
          gluetun:
            dependsOn:
              - coredns
              - config-init
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.40.0
            env:
              DOT: "off"
              DNS_ADDRESS: "127.0.0.2"
              FIREWALL_INPUT_PORTS: 8080,17871 # qBittorrent webui and exporter
              FIREWALL_OUTBOUND_SUBNETS: 10.96.0.0/12,10.244.0.0/16 # Allow access to k8s subnets
              VPN_PORT_FORWARDING: on
              PORT_FORWARD_ONLY: true
              OPENVPN_VERBOSITY: 6
            envFrom:
              - secretRef:
                  name: torrent-vpn-credentials 
            lifecycle:
              postStart:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - (ip rule del table 51820; ip -6 rule del table 51820) || true
            restartPolicy: Always
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
              allowPrivilegeEscalation: false

        containers:
          app:
            nameOverride: qbittorrent
            image:
              repository: ghcr.io/home-operations/qbittorrent
              tag: 5.1.0@sha256:fe26058628e9eb57b542204b76443b7304ed8820151d51b5c285e1828ca175a0
            env:
              UMASK: "022"
              QBT_WEBUI_PORT: &port 8080
              QBT_DOWNLOADS_PATH: /media/downloads
            # Remove the lifecycle postStart hook
            # lifecycle:
            #   postStart:
            #     exec:
            #       command: ["/bin/sh", "-c", "cp /template/qBittorrent.conf /config/qBittorrent/qBittorrent.conf"]
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 150m
                memory: 2048Mi
              limits:
                memory: 8192Mi
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
          port-forward:
            image:
              repository: ghcr.io/bjw-s-labs/gluetun-qb-port-sync
              tag: v0.0.4@sha256:d1726add365290b2047688bb9463798423a70081a1cf8c8f8eb5c062b9bccac6
            env:
              GLUETUN_CONTROL_SERVER_HOST: localhost
              GLUETUN_CONTROL_SERVER_PORT: 8000
              QBITTORRENT_HOST: localhost
              QBITTORRENT_WEBUI_PORT: *port
              CRON_ENABLED: true
              CRON_SCHEDULE: "*/5 * * * *"
              LOG_TIMESTAMP: false
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
          exporter:
            image:
              repository: docker.io/caseyscarborough/qbittorrent-exporter
              tag: v1.3.5@sha256:5e2dc3df1fc3d4cb2d1290d41b7189fc481821c5261ce16a018e8bbfa1354c42
            env:
              QBITTORRENT_BASE_URL: http://localhost:8080

    service:
      app:
        controller: qbittorrent
        ports:
          http:
            port: *port
          metrics:
            port: 17871

    ingress:
      app:
        className: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-proxy-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://qbittorrent.${domain_name}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: qbittorrent.${domain_name}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    serviceMonitor:
      app:
        enabled: true
        serviceName: qbittorrent
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 30s
            scrapeTimeout: 10s
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent
        advancedMounts:
          qbittorrent:
            app:
              - path: /config
                subPath: config
            config-init:
              - path: /config
                subPath: config
      empty-config:
        type: emptyDir
        advancedMounts:
          qbittorrent:
            port-forward:
              - path: /config
      downloads:
        enabled: true
        existingClaim: media
        advancedMounts:
          qbittorrent:
            app:
              - path: /media/downloads
                subPath: downloads
      coredns:
        type: configMap
        name: qbittorrent-coredns
        advancedMounts:
          qbittorrent:
            coredns:
              - path: /etc/coredns/Corefile
                subPath: Corefile
                readOnly: true
      qbittorrent-config:
        type: configMap
        name: qbittorrent-config
        advancedMounts:
          qbittorrent:
            config-init:
              - path: /template
                readOnly: true
