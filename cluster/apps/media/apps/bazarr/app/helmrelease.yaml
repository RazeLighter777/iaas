---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      bazarr:
        strategy: Recreate
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.4.0@sha256:a9f405688344a8a6f718e2c344438342ad21540986aeb5ab5fa781831eb2c597
            env:
              - name: INIT_POSTGRES_DBNAME
                value: bazarr
              - name: INIT_POSTGRES_HOST
                value: &dbhost cloudnative-database-media-cluster-rw
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: cloudnative-database-media-cluster-superuser
                    key: password
              - name: INIT_POSTGRES_USER
                value: &dbuser bazarr
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: cloudnative-database-media-cluster-app
                    key: password
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.1@sha256:a1b0d3a4e6462adb448dbfe4bf466e1d1bc920c17ac97c705b6db6eeb02b37b9
            env:
              TZ: ${timezone}
              POSTGRES_ENABLED: "true"
              POSTGRES_HOST: *dbhost
              POSTGRES_PORT: "5432"
              POSTGRES_DATABASE: bazarr
              POSTGRES_USERNAME: *dbuser
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: cloudnative-database-media-cluster-app
                    key: password
            envFrom:
              - secretRef:
                  name: bazarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-proxy-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://bazarr.${domain_name}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        className: nginx
        hosts:
          - host: bazarr.${domain_name}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
    persistence:
      config:
        enabled: true
        storageClass: truenas-iscsi
        size: 100Mi
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /config
      config-cache:
        type: emptyDir
        globalMounts:
          - path: /config/cache
      config-log:
        type: emptyDir
        globalMounts:
          - path: /config/log
      media:
        existingClaim: media
        advancedMounts:
          bazarr:
            app:
              - path: /media/tv
                subPath: tv
              - path: /media/movies
                subPath: movies
              - path: /media/anime
                subPath: anime
      tmp:
        type: emptyDir
