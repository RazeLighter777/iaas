# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  dependsOn:
    - name: cloudnative-pg 
      namespace: cloudnative-pg
  chart:
    spec:
      chart: authentik
      version: 2025.2.1
      sourceRef:
        kind: HelmRepository
        name: goauthentik
        namespace: flux-system
  interval: 1m0s
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    kubernetesIntegration: true
    authentik:
      #secret_key: load from secret authentik-secret-key
      postgresql:
        host: cloudnative-database-authentik-cluster-rw
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password
        name: app #default database name for cloudnative-pg database
    redis:
      enabled: true
      global:
        storageClass: truenas-iscsi
    server:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      volumes:
        - name: postgres-creds
          secret:
            secretName: cloudnative-database-authentik-cluster-app
      volumeMounts:
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true
      ingress:
        enabled: true
        pathType: Prefix
        hosts:
          - authentik.${domain_name}
        ingressClassName: nginx
    worker:
      volumes:
        - name: postgres-creds
          secret:
            secretName: cloudnative-database-authentik-cluster-app
      volumeMounts:
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true
  valuesFrom:
    - kind: Secret
      name: authentik-bootstrap-secrets
      valuesKey: AUTHENTIK_SECRET_KEY
      targetPath: authentik.secret_key
      optional: false
    - kind: Secret
      name: authentik-bootstrap-secrets
      valuesKey: AUTHENTIK_BOOTSTRAP_TOKEN
      targetPath: authentik.bootstrap_token
      optional: false
    - kind: Secret
      name: authentik-bootstrap-secrets
      valuesKey: AUTHENTIK_BOOTSTRAP_PASSWORD
      targetPath: authentik.bootstrap_password
      optional: false
    - kind: Secret
      name: authentik-bootstrap-secrets
      valuesKey: AUTHENTIK_BOOTSTRAP_EMAIL
      targetPath: authentik.bootstrap_email
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cloudnative-database-authentik
  namespace: authentik
spec:
  dependsOn:
    - name: cloudnative-pg
      namespace: cloudnative-pg
  interval: 5m
  chart:
    spec:
      chart: cluster
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: cloudnative-pg
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    cluster:
      storage:
        storageClass: truenas-iscsi
      instances: 1
      monitoring:
        enabled: true
    backups:
      enabled: true
      provider: s3
      s3:
        path: "/v1-restore"
      scheduledBackups:
        - name: daily-backup # Daily at midnight
          schedule: "0 0 0 * * *" # Daily at midnight
          backupOwnerReference: self
      retentionPolicy: "30d"
  valuesFrom:
    - kind: Secret
      name: cloudnative-external-s3-secrets
      valuesKey: s3_bucket
      targetPath: backups.s3.bucket
      optional: false
    - kind: Secret
      name: cloudnative-external-s3-secrets
      valuesKey: s3_key
      targetPath: backups.s3.key
      optional: false
    - kind: Secret
      name: cloudnative-external-s3-secrets
      valuesKey: s3_key_id
      targetPath: backups.s3.keyId
      optional: false
    - kind: Secret
      name: cloudnative-external-global-s3-secrets
      valuesKey: s3_endpoint
      targetPath: backups.endpointURL
      optional: false
    - kind: Secret
      name: cloudnative-external-global-s3-secrets
      valuesKey: s3_region
      targetPath: backups.s3.region
      optional: false
      